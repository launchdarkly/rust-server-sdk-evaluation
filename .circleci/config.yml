version: 2.1

workflows:
  test:
    jobs:
      - test

jobs:
  test:
    docker:
      - image: rust:1.50
    steps:
      - checkout
      - restore_cache:
          name: Restore Cargo cache
          keys:
            # when lock file changes, use increasingly general patterns to restore cache
            - v1-cargo-cache-{{ arch }}-{{ .Branch }}-{{ checksum "Cargo.toml" }}
            - v1-cargo-cache-{{ arch }}-{{ .Branch }}-
            - v1-cargo-cache-{{ arch }}-
      - run:
          command: cargo fetch
      - save_cache:
          name: Save Cargo cache
          paths:
            - ~/.cargo
          key: v1-cargo-cache-{{ arch }}-{{ .Branch }}-{{ checksum "Cargo.toml" }}

      - restore_cache:
          name: Restore Rustup cache
          keys:
            # use increasingly general patterns to restore cache
            - v1-rustup-cache-{{ arch }}-{{ .Branch }}
            - v1-rustup-cache-{{ arch }}-
      - run: rustup target add wasm32-wasi
      - run: rustup component add rustfmt
      - run: rustup component add clippy
      - save_cache:
          name: Save Rustup cache
          paths:
            - ~/.rustup
          key: v1-rustup-cache-{{ arch }}-{{ .Branch }}

      - run: cargo test
      - run: cargo fmt -- --check
      - run: cargo clippy -- -D warnings
      - run: cargo build
      - run: cargo build --target wasm32-wasi

version: 2.1

workflows:
  test:
    jobs:
      - test

jobs:
  test:
    docker:
      - image: cimg/rust:1.56.1
    steps:
      - checkout
      - run:
          name: Check Version
          command: |
            cargo --version
            rustc --version
      - restore_cache:
          name: Restore Cargo cache
          keys:
            # when lock file changes, use increasingly general patterns to restore cache
            - v1-cargo-cache-{{ arch }}-{{ .Branch }}-{{ checksum "Cargo.toml" }}
            - v1-cargo-cache-{{ arch }}-{{ .Branch }}-
            - v1-cargo-cache-{{ arch }}-
      - run:
          command: cargo fetch
      - save_cache:
          name: Save Cargo cache
          paths:
            - ~/.cargo
          key: v1-cargo-cache-{{ arch }}-{{ .Branch }}-{{ checksum "Cargo.toml" }}

      - restore_cache:
          name: Restore Rustup cache
          keys:
            # use increasingly general patterns to restore cache
            - v1-rustup-cache-{{ arch }}-{{ .Branch }}
            - v1-rustup-cache-{{ arch }}-
      - run: rustup target add wasm32-wasi
      - save_cache:
          name: Save Rustup cache
          paths:
            - ~/.rustup
          key: v1-rustup-cache-{{ arch }}-{{ .Branch }}
      - run:
          name: Check Formatting
          command: cargo fmt && git diff --exit-code
      - run:
          name: Clippy
          command: cargo clippy -- -D warnings
      - run:
          name: Test
          command: cargo test
      - run:
          name: Gather Coverage
          command: ./coverage.sh --html
      - store_artifacts:
          name: Upload Coverage
          path: target/llvm-cov/html
          destination: coverage
      - run:
          name: Build default Target
          command: cargo build
      - run:
          name: Build wasm32 Target
          command: cargo build --target wasm32-wasi
      - run:
          name: Generate Docs
          command: cargo doc --no-deps
      - store_artifacts:
          name: Upload Docs
          path: target/doc
          destination: doc
